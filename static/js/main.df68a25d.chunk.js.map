{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","unicorn.jpg"],"names":["LandingPage","style","width","margin","className","col","src","unicorn","alt","href","target","rel","aria-hidden","Component","AboutMe","Contact","Projects","Resume","Main","exact","path","component","App","props","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"uOAkDeA,E,uKA5CX,OACE,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,kBAAC,OAAD,CAAMC,UAAU,gBACd,kBAAC,OAAD,CAAMC,IAAK,IACT,yBAAKC,IAAKC,IAASC,IAAI,SAASJ,UAAU,eAC1C,yBAAKA,UAAU,eACb,8CACA,wDACA,6BACA,kHAKA,yBAAKA,UAAU,gBAEb,uBACEK,KAAK,uDACLC,OAAO,UAEP,uBACEN,UAAU,wBACVO,IAAI,sBACJC,cAAY,UAKhB,uBAAGH,KAAK,+BAA+BC,OAAO,UAC5C,uBACEN,UAAU,sBACVO,IAAI,sBACJC,cAAY,mB,GAlCNC,aCQXC,E,uKARX,OACE,6BACE,iD,GAJcD,aCUPE,E,uKARX,OACE,6BACE,iD,GAJcF,aCUPG,E,uKARX,OACE,6BACE,kD,GAJeH,aCQRI,E,uKANP,OACI,6BAAK,gD,GAHIJ,aCgBNK,EAVF,kBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWN,IAClC,kBAAC,IAAD,CAAOK,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,MCwBtBK,E,kDA7Bb,WAAYC,GAAQ,uCACZA,G,qDAIN,OACE,6BACE,kBAAC,SAAD,KASE,kBAAC,UAAD,KAEE,kBAAC,EAAD,a,GApBMV,aCKEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0BCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.df68a25d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\nimport unicorn from \"../unicorn.jpg\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Grid className=\"landing-grid\">\r\n          <Cell col={12}>\r\n            <img src={unicorn} alt=\"avatar\" className=\"avatar-img\" />\r\n            <div className=\"banner-text\">\r\n              <h1>Camila Lacerda</h1>\r\n              <h2>Full Stack Web Developer</h2>\r\n              <hr />\r\n              <p>\r\n                HTML/CSS | Bootstrap | Javascript | Angular | Ionic | React |\r\n                PHP | MySQL | MongoDB\r\n              </p>\r\n\r\n              <div className=\"social-links\">\r\n                {/* LinkedIn */}\r\n                <a\r\n                  href=\"https://www.linkedin.com/in/camila-lacerda-25969733/\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <i\r\n                    className=\"fa fa-linkedin-square\"\r\n                    rel=\"noopener noreferrer\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </a>\r\n\r\n                {/* Github */}\r\n                <a href=\"https://github.com/milacerda\" target=\"_blank\">\r\n                  <i\r\n                    className=\"fa fa-github-square\"\r\n                    rel=\"noopener noreferrer\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>AboutMe Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Contact Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Projects Page</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react'\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>Resume Page</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport LandingPage from './landingpage'\r\nimport AboutMe from \"./aboutme\";\r\nimport Contact from \"./contact\";\r\nimport Projects from \"./projects\";\r\nimport Resume from \"./resume\";\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={LandingPage} />\r\n    <Route path=\"/aboutme\" component={AboutMe} />\r\n    <Route path=\"/contact\" component={Contact} />\r\n    <Route path=\"/projects\" component={Projects} />\r\n    <Route path=\"/resume\" component={Resume} />\r\n  </Switch>\r\n);\r\n\r\nexport default Main;","import React, { Component} from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content, \n  Footer, FooterSection, FooterLinkList } from \"react-mdl\";\nimport Main from './components/main'\nimport { Link } from 'react-router-dom'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          {/* <Header className=\"header-color\" scroll>\n            <Navigation>\n              <Link to=\"/aboutme\">About me</Link>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header> */}\n          <Content>\n \n            <Main />\n          </Content>\n          {/* <div className=\"footer\">\n            <p>Made by Camila Lacerda</p>\n          </div> */}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/unicorn.e2595e9c.jpg\";"],"sourceRoot":""}